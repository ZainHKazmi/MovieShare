{"version":3,"sources":["Components/Post.js","Views/Home.js","Views/Admin.js","Views/Login.js","Views/Profile.js","Components/favouritesList.js","App.js","Utils/serviceWorker.js","index.js"],"names":["Post","console","log","this","props","Card","className","Content","Header","Description","name","value","movieTitle","onChange","handleChange","type","placeholder","Button","onClick","addPost","primary","Rating","icon","defaultRating","maxRating","onRate","handleRate","React","Component","Home","state","movieLink","userRating","userPic","date","posts","image","meta","disabled","summary","extraImages","username","postList","newSummary","concat","newPost","unshift","setState","editPost","addRating","movie","handleInputChange","event","target","e","rating","style","backgroundColor","as","headerStyle","Group","floated","to","postStyle","Feed","feedStyle","events","position","size","left","background","width","color","textAlign","lineHeight","fontSize","Admin","users","removeUser","userIndex","updatedState","filter","user","index","titleStyle","map","adminUserAccess","Login","password","friends","userLoggedIn","adminLoggedIn","checkCreds","preventDefault","next_page","title","carousel","Carousel","interval","Item","src","alt","Caption","login","id","hintText","floatingLabelText","marginLeft","marginTop","Profile","recommendations","watchlater","favourites","Container","maxWidth","Grid","container","justify","item","xs","useStyles","colStyle","margin","Avatar","avatar","Divider","orientation","height","alignText","marginRight","favouritesList","favList","header","cardStyle","items","App","data","callBackendAPI","a","fetch","response","json","body","status","Error","message","then","res","express","catch","err","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6c5046bf.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Button, Rating } from 'semantic-ui-react'\nimport '../App.css';\nclass Post extends React.Component {\n\n  render() {\n    //const { addRating, imgLink, movieTitle } = this.props\n    console.log(this.props)            \n    return (\n      <div>\n        <Card className = \"postCard\">\n          <Card.Content>\n            <Card.Header>What have you recently watched?</Card.Header>\n            <Card.Description>\n              <input name='movieTitle' \n                      value={ this.props.movieTitle } \n                      onChange={this.props.handleChange} \n                      type=\"text\" \n                      placeholder=\"Movie Title\" />\n            </Card.Description>\n            <Button onClick={this.props.addPost} primary>Post</Button>\n            <span>\n              <Rating icon='star' defaultRating={0} maxRating={5} onRate={this.props.handleRate} />\n            </span>\n          </Card.Content>\n       </Card>\n      </div>\n    )\n  }\n}\n\nexport default Post;\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport {Feed, Header, Rating, Button} from 'semantic-ui-react'\n// import components\nimport Post from '../Components/Post'\n\n\n\nclass Home extends React.Component {\n\n  state = {\n    movieTitle: \"\",\n    movieLink: 'http://saveabandonedbabies.org/wp-content/uploads/2015/08/default-300x169.png',\n    userRating: 0,\n    userPic: 'https://i.stack.imgur.com/34AD2.jpg',\n    date: 'Today',\n    // These are the posts, right now its hard coded but in the future we need to flood this \n    // array with the user's friends posts\n\t  // Requires server call\n    posts : [\n      {\n        date: '4 days ago',\n        image: '../../Assets/jim.jpg',\n        meta: <Rating defaultRating={3} maxRating={5} disabled /> ,\n        summary: 'Jim recommended the Avengers',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'],\n      },\n      {\n        date: '2 weeks ago',\n        image: '../../Assets/johnson.jpg',\n        meta: <Rating defaultRating={4} maxRating={5} disabled /> ,\n        summary: 'Johnson recommended Guardians of the Galaxy',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg'],\n      },\n      {\n        date: '1 month ago',\n        image: '../../Assets/tim.png',\n        meta: <Rating defaultRating={1} maxRating={5} disabled /> ,\n        summary: 'Tim recommended Avatar',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@._V1_SX300.jpg'],\n      },\n    ],\n\n    // username: `${this.props.location.state.username}`\n    username: \"User\"\n  }\n\n  \n  addPost = () => {\n    const postList = this.state.posts\n    const newSummary = this.state.username.concat(\" recommended \", this.state.movieTitle)\n\n\t  // Requires server call to get movie info\n    const newPost = {\n      date: this.state.date,\n      image: this.state.userPic,\n      meta: <Rating defaultRating={this.state.userRating} maxRating={5} disabled />,\n      summary: newSummary,\n      extraImages: [`${this.state.movieLink}`]\n    }\n\n    postList.unshift(newPost)\n\n    this.setState({\n      posts: postList\n    });\n    \n  }\n  editPost = () => {\n  }\n  addRating = (movie) => {\n\n  }\n  \n  handleInputChange = (event) => {\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    \n    // 'this' is bound to the component in this arrow function.\n    this.setState({\n      [name]: value  // [name] sets the object property name to the value of the 'name' variable.\n    })\n\n  }\n\n  handleRate = (e, { rating }) => \n      this.setState({ userRating: rating \n      })\n\n  render() {\n    return (\n        <div style={{backgroundColor: '#77a6f7'}}>\n            {/* Includes header, write post component, and multiple Post components */}\n            {/* Header */}\n            \n            <Header as='h1' style = {headerStyle}>\n              {this.state.username}'s Feed\n              <Button.Group floated=\"right\">\n                <Link to={'./'}> \n                  <Button>Log out</Button>\n                </Link>\n                <Link to={'./profile'}> \n                  <Button>Profile</Button>\n                </Link>\n              </Button.Group>\n            </Header>\n            <div style = {postStyle}>\n            <Post\n                movieTitle={this.movieTitle}\n                movieLink={this.movieLink}\n                handleChange={ this.handleInputChange } \n                handleRate= {this.handleRate}\n                addPost={ this.addPost }\n            />\n            </div>\n            {/*Makes the feed using the posts*/}\n            <div>\n              <Feed style = {feedStyle} events={this.state.posts} />\n            </div>\n            {/* Write post */}\n            {/* Posts */}\n            \n        </div>\n    );\n  }\n}\nconst feedStyle = {\n  position: 'relative',\n  size: 'large',\n  left: '27.5%',\n  background: '#d3e3fc',\n  width: '45%',\n  \n}\n\nconst headerStyle = {\n  color: '#00887a', \n  textAlign: 'center',\n  lineHeight: 2,\n  fontSize: '50px',\n  background: '#ececec',\n}\n\nconst postStyle = {\n  position: 'relative',\n  left: '40%',\n  width: \"45%\",\n}\nexport default Home;\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\nimport { Header, Card, Button} from 'semantic-ui-react'\n\n\nclass Admin extends React.Component {\n  state = {\n\t// Requires server call to populate the user list\n\tusers: [\"John doe\", \"John Smith\", \"Jack Jill\"],\n  }\n \n  removeUser = (userIndex) => {\n\t  // Requires server call\n      const updatedState = this.state.users.filter((user, index) => userIndex !== index);\n      this.setState({users: updatedState});\n  };\n\n  render(){\n     return (\n\t<div>\n    \t    <Header as=\"h1\" style={headerStyle}>\n\t     Admin\n\t     <Button.Group floated=\"right\">  \n\t      <Link to={'./profile'}>   \n\t        <Button>Profile</Button>\n\t      </Link>\n\t     </Button.Group>\n\t     </Header>\n\t    <Header as=\"h2\" style={titleStyle}>All Users</Header>\n\t     {this.state.users.map(\n\t\t(user, userIndex) =>(\n\t        <Card style = {adminUserAccess}>\n\t         <Card.Content>\n\t           <Card.Header>\n\t              <div>\n\t                {user}\n\t    \t      </div>\n\t           </Card.Header>\n\t\t   <Card.Description>\n\t\t     <Button.Group floated=\"right\"> \n\t\t\t<Link to={'./profile'}>\n\t\t\t <Button>Edit</Button>\n\t\t\t</Link>\n\t\t\t<Button onClick={()=>this.removeUser(userIndex)}>Remove</Button>\n\t\t    </Button.Group>\n\t           </Card.Description>\n\t         </Card.Content>\n\t        </Card>)\n\t        )\n\t     }\n       \n\t</div>\n     );\n  }\n}\n\nconst headerStyle = {\n  color: '#FE8FB8', \n  textAlign: 'center',\n  lineHeight: 2,\n  fontSize: '50px',\n  background: '#B7D8FE',\n}\nconst titleStyle = {\n\t  color: '#000000',\n\t  textAlign: 'center',\n\t  lineHeight: 2,\n\t  fontSize: '30px',\n}\nconst adminUserAccess = {\n  position: 'relative',\n  left: '42.5%', \n  \n}\nexport default Admin;\n","import React from 'react'\nimport TextField from 'material-ui/TextField'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport AppBar from 'material-ui/AppBar'\nimport Home from './Home'\nimport Admin from './Admin'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Carousel } from 'react-bootstrap'\nimport '../App.css';\n\nclass Login extends React.Component {\n\n  ///  React 'state'.  \n  // Allows us to keep track of changing data in this component.\n  state = {\n    username: \"\",\n    password: \"\",\n    friends: [],\n    userLoggedIn: false,\n    adminLoggedIn: false,\n  }\n  \n\n  checkCreds = (e) => {\n    e.preventDefault();\n\t  // Requires server call to ascertain user creds\n    if (this.state.username === \"user\" && this.state.password === \"user\"){\n      this.setState({ next_page: '/home' })\n      this.setState({ userLoggedIn: true })\n    } else if (this.state.username === \"admin\" && this.state.password === \"admin\"){\n      this.setState({ next_page: '/admin' })\n      this.setState({ adminLoggedIn: true })\n    } \n    console.log(this.state)\n\n  }\n\n  render() {\n    if (this.state.userLoggedIn){\n      return (\n        <Home />\n      );\n    } \n\n    if (this.state.adminLoggedIn) {\n      return (\n\t      <Admin />\n      );\n    }\n\n    return (\n        <div>\n            <MuiThemeProvider>\n            <AppBar title=\"MovieShare\"/> \n              <div style = { style.carousel }>\n                <Carousel className= \"carousel\" interval={3000}>\n                  <Carousel.Item>\n                    <div className=\"carouselPic\">\n                    <img className=\"d-block h-100\" src ='../../Assets/Movie-banner.jpg' alt = \"First Slide\"/>\n                    </div>\n                    <Carousel.Caption>\n                      <h1>Discover what your friends are watching</h1>\n                    </Carousel.Caption>\n                  </Carousel.Item>\n\n                  <Carousel.Item>\n                      <img className=\"d-block w-100\" src ='../../Assets/dunkirk-banner.jpg' alt = \"Second Slide\"/>\n                      <Carousel.Caption>\n                        <h1>Keep track of what to watch</h1>\n                      </Carousel.Caption>\n                  </Carousel.Item>\n\n                  <Carousel.Item>\n                    <img className=\"d-block w-100\" src ='../../Assets/Joker-Banner.jpg' alt = \"Third Slide\"/>\n                    <Carousel.Caption>\n                      <h1>Get the hottest recommendations</h1>\n                  </Carousel.Caption>\n                  </Carousel.Item>\n                </Carousel>\n              </div>\n                \n              <div style = { style.login }> \n                <TextField\n                    id=\"username\"\n                    hintText=\"Enter your Username\"\n                    floatingLabelText=\"Username\"\n                    onChange = {(event,value) => this.setState({username:value})}\n                />\n                <br/>\n                <TextField\n                    id=\"password\"\n                    type=\"password\"\n                    hintText=\"Enter your Password\"\n                    floatingLabelText=\"Password\"\n                    onChange = {(event,value) => this.setState({password:value})}\n                />\n              </div>\n            </MuiThemeProvider>\n            <br/>\n            {/* <Link to={this.state.next_page}>  */}\n                <button onClick={ this.checkCreds } style = { style.login }>\n                    sign in\n                </button>\n            {/* </Link> */}\n        </div>\n    );\n  }\n}\n\nconst style = {\n  carousel: {\n    marginLeft: '-10%',\n    marginTop: '-4%'\n  },\n  login: {\n    marginLeft: '37%'\n  }  \n};\n\nexport default Login;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Avatar, Container, Divider} from '@material-ui/core'\nimport {Feed, Button, Rating} from 'semantic-ui-react'\n\n\n\nclass Profile extends React.Component {\n\n  ///  React 'state'.  \n  // Allows us to keep track of changing data in this component.\n  state = {\n\t  // Requires server call to access user data\n    recommendations: [\n      {\n        meta: <Rating defaultRating={3} maxRating={5} disabled /> ,\n        summary: 'The Avengers',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'],\n      },\n      {\n        meta: <Rating defaultRating={4} maxRating={5} disabled /> ,\n        summary: 'Guardians of the Galaxy',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg'],\n      },\n    ],\n    watchlater: [{\n        date: '1 month ago',\n        summary: 'Avatar',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BMTYwOTEwNjAzMl5BMl5BanBnXkFtZTcwODc5MTUwMw@@._V1_SX300.jpg'],\n      }],\n\n    favourites: [{\n        summary: 'The Avengers',\n        extraImages: ['https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'],\n      }]\n}\n\n  render() {\n    return (\n        \n        <div style={{backgroundColor: '#f3f3f3'}}>\n          <Container maxWidth=\"xl\">\n          <Grid container justify=\"space-evenly\">\n            <Grid item xs={4} style={useStyles.colStyle} >\n              <div style={{margin: 10}}>\n                <Avatar style={useStyles.avatar} src=\"https://i.stack.imgur.com/34AD2.jpg\"/>\n                <h1>User</h1>\n                <p>Lorem ipsum dolor sit amet enim. Etiam ullamcorper. Suspendisse a pellentesque dui, non felis. Maecenas malesuada elit lectus felis, malesuada ultricies. Curabitur et ligula.</p>\n                <h3>Friends</h3>\n                <Avatar style={useStyles.friends} src=\"../../Assets/tim.png\"/>\n                <Avatar style={useStyles.friends} src=\"../../Assets/johnson.jpg\"/>\n                <Avatar style={useStyles.friends} src=\"../../Assets/jim.jpg\"/>\n\n                <h3>Statistics</h3>\n                <pre>Movies rated: 2 <br/>\n                  Average score: 3.5</pre>\n              </div>\n              <Link to={'./'}> \n                  <Button>Log out</Button>\n                </Link>\n                <Link to={'./home'}> \n                  <Button>My Feed</Button>\n                </Link>\n            </Grid>\n\n            <Grid item xs={7} style={useStyles.colStyle}>\n              <div style={{margin: 10}}>\n                <h3>My MovieBook</h3>\n                <Divider orientation=\"horizontal\"/>\n                <br/>\n                <div>\n                  <Feed style = {useStyles.feedStyle} events={this.state.recommendations} />\n                </div>\n                <Link to={'./favouritesList'}> \n                  <button style={{margin: '2%'}}>\n                      See All\n                  </button>\n                </Link>\n                <h3>Watch Later</h3>\n                <Divider orientation=\"horizontal\"/>\n                <br/>\n                <div>\n                  <Feed style = {useStyles.feedStyle} events={this.state.watchlater} />\n           \t</div>\n             <h3>Favourites List</h3>\n                <Divider orientation=\"horizontal\"/>\n                <br/>\n                <div>\n                  <Feed style = {useStyles.feedStyle} events={this.state.favourites} />\n           \t</div>\n\t    \t</div>\n\t    </Grid>\t  \n          </Grid>\n          </Container>\n        </div>\n    );\n  }\n}\n\nconst useStyles = {\n  avatar: {\n    marginTop: 10,\n    // marginLeft: '30%',\n    // marginRight: '30%',\n    left: '30%',\n    width: 130,\n    height: 130,\n  },\n  friends: {\n    margin: 10,\n    width: 80,\n    height: 80,\n  },\n  colStyle: {\n    alignText: 'center',\n    backgroundColor: '#F2F9FF',\n    marginTop: 20,\n  },\n  feedStyle: {\n    position: 'relative',\n    size: 'large',\n    background: 'white',\n    marginLeft: '2%',\n    marginRight: '2%',\n  }\n  \n}\n\n\n\nexport default Profile;\n","import React from 'react'                                  \nimport {Card, Feed, Header, Rating, Button} from 'semantic-ui-react' \nimport { Link } from 'react-router-dom'   \n\nclass favouritesList extends React.Component {\n    state = {\n\tfavList: [\"Avengers EndGame\", \"The Hobbit\", \"The Nun\", \"Fifty Shades of Grey\"],\n\tfavouritesList: [],\n\t posts: [\n\t{\n        date: '4 days ago',\n        meta: <Rating defaultRating={3} maxRating={5} disabled /> ,\n        header: 'The Avengers',\n        image: 'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg',\n      },\n      {\n        date: '2 weeks ago',\n        meta: <Rating defaultRating={4} maxRating={5} disabled /> ,\n        header: 'Guardians of the Galaxy',\n        image: 'https://m.media-amazon.com/images/M/MV5BNjM0NTc0NzItM2FlYS00YzEwLWE0YmUtNTA2ZWIzODc2OTgxXkEyXkFqcGdeQXVyNTgwNzIyNzg@._V1_SX300.jpg',\n      },\n\n    ]\n     }\n\n\n  render() {\n\n\t return (\n\t\t<div>\n\t\t <Header as=\"h1\" style={headerStyle}>\n\t\tMy MovieBook\n\t\t <Button.Group floated=\"right\">\n                <Link to={'./'}> \n                  <Button>Log out</Button>\n                </Link>\n                <Link to={'./profile'}> \n                  <Button>Profile</Button>\n                </Link>\n              </Button.Group>\n\t\t</Header>\n\t\t <Card.Group style = {cardStyle} items={this.state.posts} />\n\t\t {this.state.favouritesList.map(\n\t\t movie=>(\n\t         <Card>\n\t\t <Card.Content>\n\t\t <Card.Header>{movie}</Card.Header>            \n\t\t <Card.Description>\n\n\t\t</Card.Description>\n\t\n\t\t</Card.Content>\n\t\t</Card>)\n\t\t\n\t\t)\n\t     }  \n\t   </div>\n\t );\n  \t}\n\n\n/*\n     render(){\n\treturn (\n\t<div>\n\t    person\n\t    {this.favouritesList.list.map(movie => (<li id={movie}>{movie}</li>))}\n\t</div>\n\t);\n\n     }\n */\n \n \n }\nconst cardStyle = {\n  margin: '10px',\n  position: 'relative',\n  size: 'large',\n  left: '20%',\n  /*width: '45%',*/\n}\nconst headerStyle = {\n  color: '#00887a', \n  textAlign: 'center',\n  lineHeight: 2,\n  fontSize: '50px',\n  background: '#ececec',\n}\nexport default favouritesList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\n\nimport Login from './Views/Login';\nimport Profile from './Views/Profile';\nimport Home from './Views/Home';\nimport Admin from './Views/Admin';\n// import FriendProfile from './FriendProfile';\nimport favouritesList from './Components/favouritesList';\n\nclass App extends Component {\n\n  state = {\n    data: null\n  };\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n  \n  // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div>\n      <BrowserRouter>\n        <Switch> { /* Similar to a switch statement - shows the component depending on the URL path */ }\n          { /* Each Route below shows a different component depending on the exact path in the URL  */ }\n          <Route exact path='/' component={Login}/>\n          <Route exact path='/home' component={Home}/>\n          <Route exact path='/profile' component={Profile}/>\n          <Route exact path='/admin' component={Admin}/>\n          <Route exact path='/favouritesList' component={favouritesList}/>\n          {/* <Route exact path='/friendprofile' component={FriendProfile}/>\n            <Route exact path='/favouriteslist' component={FavouritesList}/> */}\n        </Switch>\n      </BrowserRouter>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './Utils/serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}